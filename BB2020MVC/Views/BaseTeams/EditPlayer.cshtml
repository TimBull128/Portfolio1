@model BB2020MVC.Models.Races_Player

@{
    ViewBag.Title = "Edit " + ViewBag.Race.Name + " " + Model.Name;
}

<h2>Edit @(ViewBag.Race.Name + " " + Model.Name)</h2>
<br/>
Please note: this will affect all Rosters with this Player!

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">

            <div class="col-md-10">
                @Html.HiddenFor(model => model.RaceID)
                @Html.ValidationMessageFor(model => model.RaceID, "", new { @class = "text-danger" })
            </div>
        </div>
        <table class=" table table-active table-responsive table-bordered">
            <tr>
                <th>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.LabelFor(model => model.MA, htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.Label("ST", htmlAttributes: new { @class = "control-label col-md-2" })

                </th>
                <th>
                    @Html.LabelFor(model => model.AG, htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.LabelFor(model => model.PA, htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.LabelFor(model => model.AV, htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
            </tr>
            <tr>
                <td>
                    
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownListFor(model => model.MA, new SelectList(ViewBag.MASelect, dataTextField: "Text", dataValueField: "Value"), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MA, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownListFor(model => model.STRENGTH, new SelectList(ViewBag.STSelect, dataTextField: "Text", dataValueField: "Value"), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.STRENGTH, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownListFor(model => model.AG, new SelectList(ViewBag.AGSelect, dataTextField: "Text", dataValueField: "Value"), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AG, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownListFor(model => model.PA, new SelectList(ViewBag.PASelect, dataTextField: "Text", dataValueField: "Value"), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PA, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownListFor(model => model.AV, new SelectList(ViewBag.AVSelect, dataTextField: "Text", dataValueField: "Value"), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AV, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Race", "ViewRace", new { ID = ViewBag.Race.ID })
</div>
